
The idea behind the pipeline is to act as a placeholder for a series of operations performed on
some fixed relationship attributes

Each operator will have an input Vector ({vector of data, {size, pos}}) and an output Vector, corresponding to
the input and output attributes

These Vectors will be shared between operators working on same attributes, ie, if operator2 works on output of
operator1, the inputVector2 == ouputVector1

We keep a map of attribute to Vector in context memory, and allow the operators to populate their input Vectors via
the actual values in their init () method. This method is called only once per operator, and the context memory as well
as datastore pointers are passed to it as args.

For some operators, we also need to store forward and backward indices for the values in inputVector. The index is imple
mented in context memory class itself

The execute () method per operator operates on the inputVector and modifies the value of the outputVector


